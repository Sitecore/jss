{
  "name": "styleguide",
  "displayName": "Styleguide",
  "placeholders": {
    "jss-main": [
			{
				"componentName": "Styleguide-FieldUsage-Text",
				"fields": {
					"heading": {
						"value": "Single-Line Text"
					},
					"sample": {
						"value": "This is a sample text field."
					},
					"sample2": {
						"value": "This is another sample text field using rendering options. Cannot edit because editable=false."
					}
				}
			},
			{
				"componentName": "Styleguide-FieldUsage-Text",
				"fields": {
					"heading": {
						"value": "Multi-Line Text"
					},
					"sample": {
						"value": "This is a sample text field."
					},
					"sample2": {
						"value": "This is another sample text field using rendering options. Cannot edit because editable=false."
					}
				}
			},
			{
				"componentName": "Styleguide-FieldUsage-RichText",
				"fields": {
					"heading": {
						"value": "Rich Text"
					},
					"sample": {
						"value": "<p>This is a sample rich text field. <mark>HTML is always supported.</mark> In Sitecore, editors will see a WYSIWYG editor for these fields.</p>"
					},
					"sample2": {
						"value": "<p>Another sample rich text field, using options. Keep markup entered in rich text fields as simple as possible - ideally bare tags only (no classes). Adding a wrapping class can help with styling within rich text blocks.</p><marquee>But you can use any valid HTML in a rich text field!</marquee>"
					}
				}
			},
			{
				"componentName": "Styleguide-FieldUsage-Image",
				"fields": {
					"heading": {
						"value": "Image"
					},
					"sample1": {
						"value": {
							"src": "/data/media/img/sc_logo.svg",
							"alt": "Sitecore Logo"
						}
					},
					"sample2": {
						"value": {
							"src": "/data/media/img/jss_logo.png",
							"alt": "Sitecore JSS Logo"
						}
					}
				}
			},
			{
				"componentName": "Styleguide-FieldUsage-Number",
				"fields": {
					"description": {
						"value": "Number tells Sitecore to use a number entry for editing."
					},
					"heading": {
						"value": "Number"
					},
					"sample1": {
						"value": 1.2
					},
					"sample2": {
						"value": 23
					}
				}
			},
			{
				"componentName": "Styleguide-FieldUsage-Checkbox",
				"fields": {
					"heading": {
						"value": "Checkbox"
					},
					"description": {
						"value": "Note: Sitecore does not support inline editing of Checkbox fields. The value must be edited in Experience Editor by using the edit rendering fields button (looks like a pencil) with the whole component selected."
					},
					"checkbox": {
						"value": true
					},
					"checkbox2": {
						"value": false
					}
				}
			},
			{
				"componentName": "Styleguide-FieldUsage-Date",
				"fields": {
					"heading": {
						"value": "Date"
					},
					"description": {
						"value": "Both Date and DateTime field types are available. Choosing DateTime will make Sitecore show editing UI for time; both types store complete date and time values internally. Date values in JSS are formatted using<a href=\"https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations\" target=\"_blank\">ISO 8601 formatted strings</a>for example 2012-04-23T18: 25: 43.511Z. Note: this is a JavaScript date format(e.g. new Date().toISOString()), and is different from how Sitecore stores date field values internally. Sitecore-formatted dates will not work."
					},
					"date": {
						"value": "2012-05-04T00:00:00Z"
					},
					"dateTime": {
						"value": "2018-03-14T15:00:00Z"
					}
				}
			},
			{
				"componentName": "Styleguide-FieldUsage-Link",
				"fields": {
					"heading": {
						"value": "General Link"
					},
					"description": {
						"value": "<p>A <em>General Link</em> is a field that represents a Link tag.</p>"
					},
					"externalLink": {
						"href": "https://www.sitecore.com",
						"text": "Link to Sitecore"
					},
					"emailLink": {
						"href": "mailto:foo@bar.com",
						"text": "Send an Email"
					}
				}
			},
			{
				"componentName": "Styleguide-FieldUsage-Custom",
				"fields": {
					"heading": {
						"value": "Custom Fields"
					},
					"description": {
						"value": "<p><small>Any Sitecore field type can be consumed by JSS. In this sample we consume the <em>Integer</em> field type.<br /><strong>Note:</strong> For field types with complex data, custom <code>FieldSerializer</code>s may need to be implemented on the Sitecore side.</small></p>"
					},
					"customIntField": {
						"value": 31337
					}
				}
			},
			{
				"componentName": "Styleguide-Layout-Tabs",
				"fields": {
					"heading": {
						"value": "Tabs"
					},
					"description": {
						"value": "<p>Creating hierarchical components like tabs is made simpler in JSS because it's easy to introspect the layout structure.</p>"
					}
				},
				"placeholders": {
					"jss-tabs": [
						{
							"componentName": "Styleguide-Layout-Tabs-Tab",
							"fields": {
								"title": {
									"value": "Tab 1"
								},
								"content": {
									"value": "Tab 1 super content!"
								}
							}
						},
						{
							"componentName": "Styleguide-Layout-Tabs-Tab",
							"fields": {
								"title": {
									"value": "Tab 2"
								},
								"content": {
									"value": "Tab 2 low content!"
								}
							}
						},
						{
							"componentName": "Styleguide-Layout-Tabs-Tab",
							"fields": {
								"title": {
									"value": "Tab 3"
								},
								"content": {
									"value": "Tab 3 medium content!"
								}
							}
						}
					]
				}
			},
			{
				"componentName": "Styleguide-ComponentParams",
				"fields": {
					"heading": {
						"value": "Component Params"
					},
					"description": {
						"value": "Component params (also called Rendering Parameters) allow storing non-content parameters for a component. These params should be used for more technical options such as CSS class names or structural settings."
					}
				},
				"params": {
					"cssClass": "firstParagraph",
					"columns": 5,
					"useCallToAction": true
				}
			},
			{
				"componentName": "Styleguide-Multilingual",
				"fields": {
					"heading": {
						"value": "Translation Patterns"
					},
					"sample": "This text can be translated in en.yml"
				}
			}
    ]
  }
}
